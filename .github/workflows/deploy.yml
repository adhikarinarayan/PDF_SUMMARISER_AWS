name: Build and Push to ECR

# This workflow triggers on any push to the 'main' branch
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build and Push to ECR
    # We will run this job on a fresh Ubuntu virtual machine provided by GitHub
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out our repository code so the workflow can access it
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials
    # This action uses the secrets we stored in GitHub to securely log into AWS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    # This logs the Docker client on our runner into our private ECR registry
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Step 4: Build, tag, and push the image to Amazon ECR
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: pdf_summariser_aws
        IMAGE_TAG: ${{ github.sha }} # Use the commit hash for a unique tag
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG